name: Cross-Platform Release

on:
  push:
    tags:
      - "v*" # Triggers the workflow when you push a tag like v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build the project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Archive the binary
        run: |
          mkdir -p dist
          zip -j dist/crawler-${{ matrix.os }}-${{ matrix.target }}.zip target/${{ matrix.target }}/release/crawler*

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: crawler-${{ matrix.os }}
          path: dist/crawler-${{ matrix.os }}-${{ matrix.target }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist/

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release for version ${{ github.ref_name }}.
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/
          asset_name: crawler-${{ matrix.os }}-${{ matrix.target }}.zip
          asset_content_type: application/zip
